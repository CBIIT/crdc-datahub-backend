type Application {
    _id: ID!
    sections: [Section]
    pi: PI
    piAsPrimaryContact: Boolean
    primaryContact: Contact # null if piAsPrimaryContact is true
    additionalContacts: [Contact]
    program: Program
    study: Study
    accessTypes: [String]
    targetedSubmissionDate: String # YYYY-MM-DD format
    targetedReleaseDate: String # YYYY-MM-DD format
    timeConstraints: [TimeConstraint]
    cancerTypes: [String] # FE control allowed values
    otherCancerTypes: String
    preCancerTypes: [String] # FE control allowed values
    otherPreCancerTypes: String
    numberOfParticipants: Int
    species: [String] # FE control allowed values
    cellLines: Boolean
    modelSystems: Boolean
    dataTypes: [String] # FE control allowed values
    otherDataTypes: String
    clinicalData: ClinicalData
    files: [FileInfo]
    submitterComment: String
    status: String # [New, In Progress, Submitted, In Review, Approved, Rejected]
    programLevelApproval: Boolean # Only valid for Approved status
    reviewComment: String
    createdAt: String # YYYY-MM-DDTHH:MM:SS format
    updatedAt: String # YYYY-MM-DDTHH:MM:SS format
    history: [Event]
    applicantID: String
}

input AppInput {
    _id: ID
    sections: [SectionInput]
    pi: PIInput
    piAsPrimaryContact: Boolean
    primaryContact: ContactInput # not needed if piAsPrimaryContact is true
    additionalContacts: [ContactInput]
    program: ProgramInput
    study: StudyInput
    funding: FundingInput
    accessTypes: [String]
    targetedSubmissionDate: String # YYYY-MM-DD format
    targetedReleaseDate: String # YYYY-MM-DD format
    timeConstraints: [TimeConstraintInput]
    cancerTypes: [String] # FE control allowed values
    otherCancerTypes: String
    preCancerTypes: [String] # FE control allowed values
    otherPreCancerTypes: String
    numberOfParticipants: Int
    species: [String] # FE control allowed values
    cellLines: Boolean
    modelSystems: Boolean
    dataTypes: [String] # FE control allowed values
    otherDataTypes: String
    clinicalData: ClinicalDataInput
    files: [FileInfoInput]
    submitterComment: String
}

type Section {
    name: String # Section A, B, C etc.
    status: String # FE control allowed values
}

input SectionInput {
    name: String # Section A, B, C etc.
    status: String # FE control allowed values
}

type TimeConstraint{
    description: String
    effectiveDate: String
}

input TimeConstraintInput {
    description: String
    effectiveDate: String
}

type Event {
    status: String # [New, In Progress, Submitted, In Review, Approved, Rejected]
    reviewComment: String # if applicable
    dateTime: String # YYYY-MM-DDTHH:MM:SS format
    userID: ID!
}

type ClinicalData {
    dataTypes: [String]  # FE control allowed values
    otherDataTypes: String
    futureDataTypes: Boolean
}

input ClinicalDataInput {
    dataTypes: [String]  # FE control allowed values
    otherDataTypes: String
    futureDataTypes: Boolean
}

type Publication {
    title: String
    pubmedID: String
    DOI: String
}

input PublicationInput {
    title: String
    pubmedID: String
    DOI: String
}

type PlannedPublication {
    title: String
    expectedDate: String
}

input PlannedPublicationInput {
    title: String
    expectedDate: String
}

type FileInfo {
    type: String  # FE control allowed values
    count: Int
    amount: String # xxxMB, GB etc
}

input FileInfoInput {
    type: String  # FE control allowed values
    count: Int
    amount: String # xxxMB, GB etc
}

type Funding {
    agencies: [String]
    grantNumbers: [String]
    nciProgramOfficer: String
    nciGPA: String
}

input FundingInput {
    agencies: [String]
    grantNumbers: [String]
    nciProgramOfficer: String
    nciGPA: String
}

type Contact {
    role: String
    firstName: String
    lastName: String
    email: String
    phone: String
}

input ContactInput {
    role: String
    firstName: String
    lastName: String
    email: String
    phone: String
}

type Program {
    name: String
    abbreviation: String
    description: String
}

input ProgramInput {
    name: String
    abbreviation: String
    description: String
}

type Study {
    name: String
    abbreviation: String
    description: String
    publications: [Publication]
    plannedPublications: [PlannedPublication]
    repositories: [Repository]
    funding: Funding
}

input StudyInput {
    name: String
    abbreviation: String
    description: String
    publications: [PublicationInput]
    plannedPublications: [PlannedPublicationInput]
    repositories: [RepositoryInput]
    funding: FundingInput
}

type Repository {
    name: String
    studyID: String
    submittedDate: String
}

input RepositoryInput {
    name: String
    studyID: String
    submittedDate: String
}

type PI {
    firstName: String
    lastName: String
    position: String
    email: String
    institution: String
    eRAAccount: String
    address: String
}

input PIInput {
    firstName: String
    lastName: String
    position: String
    email: String
    institution: String
    eRAAccount: String
    address: String
}

type Query {
    "User or Fed lead initiated operations"
    getApplication (_id: ID!): Application
    getMyLastApplication: Application

    "Result depends on user's permission"
    listApplications(first: Int = 10, offset: Int = 0): [Application]
    version: String
}
type Mutation {
    "User initiated operations"
    createApplication: Application
    saveApplication(application: AppInput!): Application
    submitApplication(_id: ID!): Application
    reopenApplication(_id: ID!): Application

    "Fed lead initiated operations"
    approveApplication (_id: ID!, wholeProgram: Boolean, comment: String): Application
    rejectApplication (_id: ID!, comment: String!): Application

    "Admin only operations"
    deleteApplication (_id: ID!): Application
}

