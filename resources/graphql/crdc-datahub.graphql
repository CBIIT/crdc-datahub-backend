type Application {
    _id: ID!
    sections: [Section]
    pi: PI
    primaryContact: PrimaryContact
    additionalContacts: [AdditionalContact]
    program: Program
    study: Study
    funding: Funding
    accessPolicy: String
    targetedReleaseDate: String # YYYY-MM-DD format
    embargoInfo: String
    cancerTypes: [String] # FE control allowed values
    preCancerTypes: [String] # FE control allowed values
    numberOfParticipants: Int
    species: [String] # FE control allowed values
    dataTypes: [String] # FE control allowed values
    clinicalData: ClinicalData
    files: [FileInfo]
    publications: [Publication]
    timeConstraints: String
    submitterComment: String
    status: String # [In Progress, Submitted, In Review, Approved, Rejected]
    programLevelApproval: Boolean # Only valid for Approved status
    reviewComment: String
    createdAt: String # YYYY-MM-DDTHH:MM:SS format
    updatedAt: String # YYYY-MM-DDTHH:MM:SS format
    history: [Event]
    applicantID: String
}

input AppInput {
    _id: ID
    sections: [SectionInput]
    pi: PIInput
    primaryContact: PrimaryContactInput
    additionalContacts: [AdditionalContactInput]
    program: ProgramInput
    study: StudyInput
    funding: FundingInput
    accessPolicy: String
    targetedReleaseDate: String # YYYY-MM-DD format
    embargoInfo: String
    cancerTypes: [String] # FE control allowed values
    preCancerTypes: [String] # FE control allowed values
    numberOfParticipants: Int
    species: [String] # FE control allowed values
    dataTypes: [String] # FE control allowed values
    clinicalData: ClinicalDataInput
    files: [FileInfoInput]
    timeConstraints: String
    publications: [PublicationInput]
    submitterComment: String
}

type Section {
    name: String # Section A, B, C etc.
    status: String # FE control allowed values
}

input SectionInput {
    name: String # Section A, B, C etc.
    status: String # FE control allowed values
}

type Event {
    status: String # [In Progress, Submitted, In Review, Approved, Rejected]
    reviewComment: String # if applicable
    dateTime: String # YYYY-MM-DDTHH:MM:SS format
    userID: ID!
}

type ClinicalData {
    dataTypes: [String]  # FE control allowed values
    futureDataTypes: Boolean
}

input ClinicalDataInput {
    dataTypes: [String]  # FE control allowed values
    futureDataTypes: Boolean
}

type Publication {
    title: String
    pubmedID: String
    DOI: String
}

input PublicationInput {
    title: String
    pubmedID: String
    DOI: String
}

type FileInfo {
    type: String  # FE control allowed values
    count: Int
    amount: String # xxxMB, GB etc
}

input FileInfoInput {
    type: String  # FE control allowed values
    count: Int
    amount: String # xxxMB, GB etc
}

type Funding {
    agencies: [Agency]
    nciProgramOfficer: String
    nciGPA: String
}

input FundingInput {
    agencies: [AgencyInput]
    nciProgramOfficer: String
    nciGPA: String
}

type Agency {
    name: String
    grantNumbers: [String]
}

input AgencyInput {
    name: String
    grantNumbers: [String]
}

type PrimaryContact {
    firstName: String
    lastName: String
    email: String
    phone: String
}

input PrimaryContactInput {
    firstName: String
    lastName: String
    email: String
    phone: String
}

type AdditionalContact {
    role: String
    firstName: String
    lastName: String
    email: String
    phone: String
}

input AdditionalContactInput {
    role: String
    firstName: String
    lastName: String
    email: String
    phone: String
}

type Program {
    title: String
    abbreviation: String
    description: String
}

input ProgramInput {
    title: String
    abbreviation: String
    description: String
}

type Study {
    title: String
    abbreviation: String
    description: String
    repositories: [Repository]
}

input StudyInput {
    title: String
    abbreviation: String
    description: String
    repositories: [RepositoryInput]
}

type Repository {
    name: String
    studyID: String
}

input RepositoryInput {
    name: String
    studyID: String
}

type PI {
    firstName: String
    lastName: String
    position: String
    email: String
    institution: String
    eRAAccount: String
    address: String
}

input PIInput {
    firstName: String
    lastName: String
    position: String
    email: String
    institution: String
    eRAAccount: String
    address: String
}

type Query {
    version: String
    "User or Fed lead initiated operations"
    getApplication (_id: ID!): Application
    getMyLastApplication: Application

    "Result depends on user's permission"
    listApplications(first: Int = 10, offset: Int = 0): [Application]
}
type Mutation {
    "User initiated operations"
    saveApplication(application: AppInput): Application
    submitApplication(_id: ID!): Application
    reopenApplication(_id: ID!): Application

    "Fed lead initiated operations"
    approveApplication (_id: ID!, wholeProgram: Boolean, comment: String): Application
    rejectApplication (_id: ID!, comment: String!): Application

    "Admin only operations"
    deleteApplication (_id: ID!): Application
}

